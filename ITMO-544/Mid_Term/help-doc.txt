//Arpita notes
vanilla instance = aws ec2 run-instances --image-id ami-07d0cf3af28718ef8 --count 1 --instance-type t2.micro --key-name MyKeyPair --security-group-ids sg-073198418b7ed762d
mine = ./install.sh ami-07d0cf3af28718ef8 2 t2.micro MyKeyPair sg-073198418b7ed762d
aws ec2 run-instances --image-id ami-07d0cf3af28718ef8 --count 1 --instance-type t2.micro --key-name MyKeyPair --security-group-ids sg-073198418b7ed762d           


Querry to check all 7 arguments are there 
clock sync
instance run
wait command
create load balancer 
configure health check for load balancer
coockie stickyness policy
Registring EC2 instance with loadbalancer
creatind RDB database


/*
sudo /var/www/html/
vi info.php
(
    <?php phpinfo();  ?>
)
*/

///////////////// 9/25/19 class///////////////
Single Tier Application 

Purpose - Recieve Customer Data and an Image Upload
Store Data 
    name 
    phone
    Email

Store Image
    s3 - create buckets raw-pal finsihed-pal

Use an image processing Library (thumbnail 100*100)
Notify customer that processing is done (SMS - Email)  (Not doing that now)
Update Customer Record (Not doing that either now)
Gallary page

Index.php
process.php
gallery.php

PHP is quick and SDK have more information (According to Professor)


aws ec2 describe security-groups
ssh -i ./classkey.pam ubuntu@3.83.something.something

#install composer 
#after that
#sudo apt-get install simplexml php7.2.xml 
#run php -d memory_limit=-1 composer.phar require aws/aws-sdk-php
#sudo apt-get install php-curl
#clone git 
#week 6 you have list_bucket.php
#sudo cp ./list-buckets.php /var/www/html
#tail var/log/apache2/error.log 



/////////////// 9/30/2019///////////////
#ssh-keygen will generate id_rsa and id_rsa.pub file
#mv id_rsa id_rsa_priv
#mv id_rsa.pub id_rsa_pub.pub
config file 

git clone git@github.com:illinoistech-itm/pjain24.git 

/* create image command aws ec2 create-image --instance-id i-01ad7e160d71adce9 --name "new_pjain24_with_github_private_repo"  */
IT GENRATED MY PRIVATE REPO AMI :    ami-0eb7af7225499cc83

aws ec2 run-instances --image-id ami-0eb7af7225499cc83 --count 1 --user-data file://installenv.sh --instance-type t2.micro --key-name MyKeyPair --security-group-ids sg-073198418b7ed762d